{
  "openapi": "3.0.0",
  "info": {
    "title": "API veterinary",
    "description": "This is a veterinary API, using mongoDB, with GET, POST, PUT and DELETE features, both for tutors and pets, with implemented authentication functionality, being mandatory in almost all routes. It was developed by Kelve Oliveira, Felipe Marques, and Raimundo Kennedy, using Kelve Oliveira's base code.",
    "contact": {
      "name": "Support",
      "email": "kelveoliveira052@gmail.com"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "Everything about authentication"
    },
    {
      "name": "Tutor",
      "description": "Everything about tutors"
    },
    {
      "name": "Pet",
      "description": "Everything about pets"
    }
  ],
  "paths": {
    "/auth":{
      "post":{
        "tags": ["Authentication"],
        "description": "Create token",
        "summary": "Create a new token",
        "requestBody": {
          "description": "data needed to create token",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyCreateToken"
              }
            }
          }
        },
        "responses":{
          "200":{
            "description": "access_token: {token}"
          },
          "400": {
            "description": "Email or password error"
          }
        }
      }
    },
    "/tutors": {
      "get":{
        "tags": ["Tutor"],
        "summary": "Retrieves all tutors",
        "description": "Registered tutors",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200":{
            "description": "Registered tutors",
            "content":{
              "application/json":{
                "schema":{
                  "type": "array",
                  "items":{
                    "$ref":"#/components/schemas/ResponseTutor"
                  }
                }
              }
            }
          },
          "400":{
            "description": "Error when searching for tutors"
          }
        }
      },
      "post": {
        "tags": ["Tutor"],
        "description": "create new tutor",
        "summary": "Create a new tutor",
        "requestBody": {
          "description": "Data needed to create the tutor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyCreateTutor"
              }
            }
          }
        },
        "responses": {
          "200":{
            "description": "Successfully created a tutor.",
            "content":{
              "application/json":{
                "schema":{
                  "$ref":"#/components/schemas/ResponseTutor"
                }
              }
            }
          },
          "400":{
            "description": "Failed to create tutor"
          }
        }
      }
    },
    "/tutor/{id}":{
      "put":{
        "tags": ["Tutor"],
        "summary": "Updates a tutor",
        "description": "Update tutor",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters":[{
          "name": "id",
          "in": "path",
          "description": "ID belonging to a specific tutor.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }],
        "requestBody": {
          "description": "Data needed to update the tutor",
          "content":{
            "application/json":{
              "schema": {
                "$ref":"#/components/schemas/BodyUpdateTutor"
              }
            }
          }
        },
        "responses":{
          "200":{
            "description": "Successfully updated a tutor.",
            "content":{
              "application/json":{
                "schema":{
                  "type": "object",
                  "$ref":"#/components/schemas/ResponseTutor"
                }
              }
            }
          },
          "400":{
            "description": "Update failed"
          }
        }
      },
      "delete": {
        "tags": ["Tutor"],
        "description": "Delete tutor",
        "summary": "Deletes a tutor",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters":[{
          "name": "id",
          "in": "path",
          "description": "ID belonging to a specific tutor.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }],
        "responses":{
          "204":{

          },
          "400":{
            "description": "Error deleting"
          }
        }
      }
    },
    "/pet/{tutorId}":{
      "post":{
        "tags": ["Pet"],
        "description": "Create new pet",
        "summary": "Creates a pet and adds it to a tutor",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters":[{
          "name": "tutorId",
          "in": "path",
          "description": "ID belonging to a specific tutor.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }],
        "requestBody": {
          "description": "Data needed to create the pet",
          "content":{
            "application/json":{
              "schema": {
                "$ref":"#/components/schemas/BodyCreatePet"
              }
            }
          }
        },
        "responses":{
          "200": {
            "description": "Successfully created a pet.",
            "content":{
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BodyCreatePet"
                }
              }
            }
          },
          "400": {
            "description": "Failed to create a pet."
          }
        }
      }
    },
    "/pet/{petId}/tutor/{tutorId}":{
      "put":{
        "tags": ["Pet"],
        "description": "Update pet",
        "summary": "Updates a pet's info",
        "security":[{
          "bearerAuth": []
        }],
        "parameters":[{
          "name": "petId",
          "in": "path",
          "description": "ID belonging to a specific pet.",
          "required": true,
          "type": "string",
          "format": "uuid"
        },
        {
          "name": "tutorId",
          "in": "path",
          "description": "ID belonging to a specific tutor.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }],
        "requestBody": {
          "description": "Data needed to update the pet",
          "content":{
            "application/json":{
              "schema": {
                "$ref":"#/components/schemas/BodyCreatePet"
              }
            }
          }
        },
        "responses":{
          "200":{
            "description": "Successfully updated a pet.",
            "content":{
              "application/json":{
                "schema":{
                  "type": "object",
                  "$ref":"#/components/schemas/BodyCreatePet"
                }
              }
            }
          },
          "400":{
            "description": "Failed to update a pet."
          }
        }
      },
      "delete":{
        "tags": ["Pet"],
        "description": "Delete pet",
        "summary": "Deletes a pet from a tutor",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters":[{
          "name": "petId",
          "in": "path",
          "description": "ID belonging to a specific pet.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }, {
          "name": "tutorId",
          "in": "path",
          "description": "ID belonging to a specific tutor.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }],
        "responses":{
          "200":{},
          "400":{
            "description": "Failed to delete a pet."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BodyCreateToken":{
        "type": "object",
        "properties":{
          "email":{
            "type": "string",
            "description": "email belonging to a tutor",
            "example": "jonas@paidepet.com"
          },
          "password":{
            "type": "string",
            "description": "tutor password that has the email entered",
            "example": "p#llk145$"
          }
        }
      },
      "BodyCreateTutor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name to be entered in tutor",
            "example": "Alex Abreu"
          },
          "password": {
            "type": "string",
            "description": "password to be created",
            "example": "p#llk145$"
          },
          "phone": {
            "type": "number",
            "description": "phone to be created",
            "example": 69993638638
          },
          "email": {
            "type": "string",
            "description": "email to be created",
            "example": "jonas@paidepet.com"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "date of birthday to be inserted in tutor",
            "example": "2000-12-12"
          },
          "zip_code": {
            "type": "number",
            "description": "zip code to be inserted in tutor",
            "example": 61760000
          }
        }
      },
      "BodyUpdateTutor": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "name to be entered in tutor",
            "example": "Alex Abreu"
          },
          "phone": {
            "type": "number",
            "description": "phone to be created",
            "example": 69993638638
          },
          "email": {
            "type": "string",
            "description": "email to be created",
            "example": "jonas@paidepet.com"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "date of birthday to be inserted in tutor",
            "example": "2000-12-12"
          },
          "zip_code": {
            "type": "number",
            "description": "zip code to be inserted in tutor",
            "example": 61760000
          }
        }
      },
      "ResponseTutor": {
        "type": "object",
        "properties": {
          "id":{
            "type": "string",
            "description": "ID Tutor",
            "format": "uuid"
          }, 
          "name": {
            "type": "string",
            "description": "name to be entered in tutor",
            "example": "Alex Abreu"
          },
          "phone": {
            "type": "number",
            "description": "phone to be created",
            "example": 69993638638
          },
          "email": {
            "type": "string",
            "description": "email to be created",
            "example": "jonas@paidepet.com"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "description": "date of birthday to be inserted in tutor",
            "example": "2000-12-12"
          },
          "zip_code": {
            "type": "number",
            "description": "zip code to be inserted in tutor",
            "example": 61760000
          }
        }
      },
      "BodyCreatePet":{
        "type": "object",
        "properties": {
          "name":{
            "type": "string",
            "description": "Name pet",
            "example": "Nina"
          },
          "species":{
            "type": "string",
            "description": "species pet",
            "example": "dog"
          },
          "carry":{
            "type": "string",
            "description": "carry pet",
            "example": "p"
          },
          "weight":{
            "type": "number",
            "description": "weight pet",
            "example": 5
          },
          "date_of_birth":{
            "type": "date",
            "description": "pet's date of birth",
            "example": "1993-12-12"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth":{
        "description": "JWT authentication",
      "type": "http",
      "scheme": "bearer",
      "bearerFormat": "JWT"
      }
    }
  }
}